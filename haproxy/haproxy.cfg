global
	log stdout local0

	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

	ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

	debug

defaults
	log                 global
	maxconn             3000
	mode                http
	timeout connect     10s
	timeout client      30s
	timeout server      30s
	option              httplog
	option              http-use-htx
	option              logasap
	option              dontlognull
	default-server      init-addr last,libc,none no-tls-tickets resolvers docker check

resolvers docker
	parse-resolv-conf

frontend http-in
#	mode http
#	option httplog
	bind *:80 alpn h2,http/1.1
#	bind *:443 ssl  crt /usr/local/etc/haproxy/haproxy.pem  alpn h2,http/1.1

	acl is_gateway          url_beg /gateway
	use_backend gateway     if is_gateway

frontend grpc-in
	mode tcp
#	option tcplog
	bind *:3001 alpn h2,http/1.1

#	tcp-request inspect-delay 5s
#	tcp-request content accept if { req_ssl_hello_type 1 }

	acl is_resource             path_beg /data.ResourceService
	use_backend resource        if is_resource
	default_backend resource

backend gateway
	server gateway gateway:3000 check

backend resource
	mode tcp
#	option tcplog
#   with ssl
#	server resource resource:3002 check maxconn 20 ssl alpn h2 ca-file /usr/local/etc/haproxy/server.crt

#   without ssl
	server resource resource:3002 check alpn h2,http/1.1
